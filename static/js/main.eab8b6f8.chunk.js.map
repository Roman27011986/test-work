{"version":3,"sources":["pages/LoginPage/LoginPage.module.css","services/auth.js","pages/LoginPage/LoginPage.jsx","pages/MePage/MePage.jsx","components/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","interceptors","request","use","a","config","localStorage","getItem","headers","Authorization","response","setItem","data","body","message","post","access_token","refresh_token","get","console","log","checkAuth","signup","login","email","password","LoginPage","toggleLogin","toggleLoading","useState","setEmail","setPassword","handleChange","event","target","name","value","handleSubmit","preventDefault","nativeEvent","submitter","className","styles","loginForm","onSubmit","type","placeholder","required","onChange","btnBox","MePage","useEffect","style","margin","width","App","JSON","parse","isLogin","setIsLogin","isLoading","setIsLoading","boolean","color","height","timeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eab8b6f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginPage_loginForm__QOrFN\",\"btnBox\":\"LoginPage_btnBox__1eAWJ\"};","import axios from 'axios';\r\naxios.defaults.baseURL = 'http://142.93.134.108:1111'\r\n\r\naxios.interceptors.request.use(async (config) => {\r\n    if (localStorage.getItem('tokenIsValid') === 'token is valid') {\r\n        config.headers.Authorization = `Bearer ${localStorage.getItem('access_token')}`\r\n        return config;\r\n    } \r\n        config.headers.Authorization = `Bearer ${localStorage.getItem('refresh_token')}`\r\n    return config;\r\n});\r\n\r\n\r\naxios.interceptors.response.use(async (config) => {\r\n      localStorage.setItem('tokenIsValid', config?.data?.body?.message)\r\n    if (config.data.body.message === 'token expired') {\r\n        try {\r\n        const { data: { body: { access_token, refresh_token } } } = await axios.post('/refresh')\r\n        localStorage.setItem('access_token', access_token)\r\n        localStorage.setItem('refresh_token', refresh_token)\r\n        localStorage.setItem('tokenIsValid', 'token is valid')\r\n        await axios.get(`/me`)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    return config;\r\n});\r\n\r\nexport const checkAuth = async () => {\r\n    try {\r\n         await axios.get(`/me`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    };\r\n};\r\n\r\nexport const signup = async (body) => {\r\n    try {\r\n        const response = await axios.post('/sign_up', body);\r\n        localStorage.setItem('isLogin', true)\r\n        return response;\r\n    } catch (error) {\r\n        localStorage.setItem('isLogin', false)\r\n    }\r\n};\r\n\r\nexport const login = async ({ email, password }) => {\r\n    try {\r\n        const { data: { body: { access_token, refresh_token } } } = await axios.post(`/login?email=${email}&password=${password}`);\r\n        if (access_token && refresh_token) {\r\n        localStorage.setItem('access_token', access_token)\r\n        localStorage.setItem('refresh_token', refresh_token)\r\n        localStorage.setItem('tokenIsValid', 'token is valid')\r\n        localStorage.setItem('isLogin', true)\r\n        }\r\n    } catch (error) {\r\n        localStorage.setItem('isLogin', false)\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import { useState } from 'react';\r\nimport { signup, login } from '../../services/auth';\r\nimport styles from './LoginPage.module.css'\r\nexport default function LoginPage({toggleLogin,toggleLoading}) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        switch (name) {\r\n            case 'email':\r\n                setEmail(value)\r\n                break;\r\n            case 'password':\r\n                setPassword(value)\r\n                break;\r\n            default:\r\n                console.log('error from LoginPage');;\r\n        };\r\n    }\r\n   \r\n    \r\n        const handleSubmit = async (event) => {\r\n            event.preventDefault();\r\n            const body = {\r\n                email,\r\n                password\r\n            }\r\n            toggleLoading(true)\r\n            switch (event.nativeEvent.submitter.name) {\r\n                case 'Sign up':\r\n                    await signup(body)\r\n                    break;\r\n                case 'Login':\r\n                    await login(body)\r\n                    toggleLogin()\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            toggleLoading(false)\r\n            setEmail('')\r\n            setPassword('')\r\n         };\r\n\r\n         \r\n    return (\r\n        <form className={styles.loginForm} onSubmit={handleSubmit}>\r\n            <input type=\"email\" placeholder='email' value={email} required name='email' onChange={handleChange} />\r\n            <input type=\"password\" placeholder='password' value={password} required name='password' onChange={handleChange} />\r\n            <div className={styles.btnBox}>\r\n            <button type='submit' name='Sign up'>Sign up</button>\r\n            <button type='submit' name='Login'>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};","import { useEffect } from 'react';\r\nimport { checkAuth } from '../../services/auth';\r\nexport default function MePage() {\r\n  useEffect(() => {\r\n    checkAuth()\r\n  },[])\r\n    return <div style={{margin:'auto',width:200}}>Token is valid</div>\r\n}","import { useState } from 'react';\nimport LoginPage from '../pages/LoginPage';\nimport MePage from '../pages/MePage';\nimport Loader from \"react-loader-spinner\";\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(JSON.parse(localStorage.getItem('isLogin')))\n  const [isLoading, setIsLoading] = useState(false)\n  const toggleLoading = (boolean) => {\n    setIsLoading(boolean)\n  }\n  const toggleLogin = () => {\n    setIsLogin(JSON.parse(localStorage.getItem('isLogin')))\n  }\n  \n  return (\n    <>\n      {isLogin ? <MePage /> : <LoginPage toggleLogin={toggleLogin} toggleLoading={toggleLoading}/>}\n      {isLoading && <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={0}\n      />}\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n      </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}